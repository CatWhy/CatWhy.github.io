{
    "version": "https://jsonfeed.org/version/1",
    "title": "独白 • All posts by \"开发语言\" tag",
    "description": "博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/09/19/vue3-zheng-he-mock-js-2022/",
            "url": "http://example.com/2022/09/19/vue3-zheng-he-mock-js-2022/",
            "title": "vue3 整合 mock.js（2022）",
            "date_published": "2022-09-19T12:59:16.000Z",
            "content_html": "<h2 id=\"第一步：安装\"><a href=\"#第一步：安装\" class=\"headerlink\" title=\"第一步：安装\"></a>第一步：安装</h2><h3 id=\"1-安装mockjs\"><a href=\"#1-安装mockjs\" class=\"headerlink\" title=\"1. 安装mockjs\"></a>1. 安装mockjs</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 将mockjs 安装在 devDependencies 中，只能在生产环境中起作用</span><br><span class=\"line\">npm install mockjs -D</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"2-安装axios\"><a href=\"#2-安装axios\" class=\"headerlink\" title=\"2. 安装axios\"></a>2. 安装axios</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i axios --save</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"第二步：编写请求文件user-ts\"><a href=\"#第二步：编写请求文件user-ts\" class=\"headerlink\" title=\"第二步：编写请求文件user.ts\"></a>第二步：编写请求文件user.ts</h2><h3 id=\"1-在src下面新建mock文件夹，然后在其中创建-index-ts-文件\"><a href=\"#1-在src下面新建mock文件夹，然后在其中创建-index-ts-文件\" class=\"headerlink\" title=\"1.在src下面新建mock文件夹，然后在其中创建 index.ts 文件\"></a>1.在src下面新建mock文件夹，然后在其中创建 <code>index.ts</code> 文件</h3><p>将所需的mock请求文件<code>home.ts</code>引入，并在该页面做相关mock配置，具体配置可查看官网。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 首先引入Mock</span><br><span class=\"line\">const Mock = require('mockjs')</span><br><span class=\"line\"></span><br><span class=\"line\">// 引入所有的mock文件</span><br><span class=\"line\">require('@/mock/api/home')</span><br><span class=\"line\"></span><br><span class=\"line\">// 设置拦截ajax请求的相应时间</span><br><span class=\"line\">// Mock.setup({</span><br><span class=\"line\">//     timeout: '200-600'</span><br><span class=\"line\">// });</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"2-在mock文件夹下建立api文件夹，mock请求文件在该页面写入。\"><a href=\"#2-在mock文件夹下建立api文件夹，mock请求文件在该页面写入。\" class=\"headerlink\" title=\"2. 在mock文件夹下建立api文件夹，mock请求文件在该页面写入。\"></a>2. 在mock文件夹下建立api文件夹，mock请求文件在该页面写入。</h3><p>以下示例文件为<code>home.ts</code> 文件,包含增删改查操作，供大家参考。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const Mocks = require(\"mockjs\")</span><br><span class=\"line\"></span><br><span class=\"line\">const tipList = [</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 0,</span><br><span class=\"line\">        title: \"冬\",</span><br><span class=\"line\">        content: \"农历正月初五,</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 1,</span><br><span class=\"line\">        title: \"每日计划\",</span><br><span class=\"line\">        content: \"每日计划\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 2,</span><br><span class=\"line\">        title: \"明日安排\",</span><br><span class=\"line\">        content: \"明日安排\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 3,</span><br><span class=\"line\">        title: \"会议总结\",</span><br><span class=\"line\">        content: \"会议议题。出现了什么问题;信息分享\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 4,</span><br><span class=\"line\">        title: \"电影清单\",</span><br><span class=\"line\">        content: \"电影\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 5,</span><br><span class=\"line\">        title: \"歌曲收藏\",</span><br><span class=\"line\">        content: \"无感\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 6,</span><br><span class=\"line\">        title: \"路程\",</span><br><span class=\"line\">        content: \"路程\"</span><br><span class=\"line\">    }, {</span><br><span class=\"line\">        id: 7,</span><br><span class=\"line\">        title: \"联系电话\",</span><br><span class=\"line\">        content: \"2343242342342343\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">    {</span><br><span class=\"line\">        id: 8,</span><br><span class=\"line\">        title: \"邮箱\",</span><br><span class=\"line\">        content: \"24534534534@qq.com\"</span><br><span class=\"line\">    },</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">// 获取所有便签</span><br><span class=\"line\">const article = Mocks.mock(\"/home/article\", () =&gt; {</span><br><span class=\"line\">    return tipList</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br><span class=\"line\">// 搜索便签</span><br><span class=\"line\">const selectA = Mocks.mock(\"/home/selectArticle\", (ops: any) =&gt; {</span><br><span class=\"line\">    const obj = eval(\"(\" + ops.body + \")\")</span><br><span class=\"line\">    const list: any[] = []</span><br><span class=\"line\">    tipList.filter((item) =&gt; {</span><br><span class=\"line\">        if (item.title.indexOf(obj.val) &gt;= 0) {</span><br><span class=\"line\">            list.push(item)</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\">    return list;</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br><span class=\"line\">// 获取便签详情s</span><br><span class=\"line\">const details = Mocks.mock(\"/getDetail\", (ops: any) =&gt; {</span><br><span class=\"line\">    const obj = eval(\"(\" + ops.body + \")\")</span><br><span class=\"line\">    for (let i = 0; i &lt; tipList.length; i++) {</span><br><span class=\"line\">        if (tipList[i].id == obj.id) {</span><br><span class=\"line\">            return tipList[i]</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br><span class=\"line\">// 修改便签内容</span><br><span class=\"line\">const fex = Mocks.mock(\"/api/updateTip\", (ops: any) =&gt; {</span><br><span class=\"line\">    const obj = eval(\"(\" + ops.body + \")\")</span><br><span class=\"line\">    tipList[obj.data.id].title = obj.data.title</span><br><span class=\"line\">    tipList[obj.data.id].content = obj.data.content</span><br><span class=\"line\">})</span><br><span class=\"line\">// 删除便签</span><br><span class=\"line\">const del = Mocks.mock(\"/api/deleteTip\", (ops: any) =&gt; {</span><br><span class=\"line\">    const obj = eval(\"(\" + ops.body + \")\")</span><br><span class=\"line\">    for (let i = 0; i &lt; tipList.length; i++) {</span><br><span class=\"line\">        if (tipList[i].id == obj.id) {</span><br><span class=\"line\">            tipList.splice(i, 1)</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">})</span><br><span class=\"line\">// 新增便签</span><br><span class=\"line\">const add = Mocks.mock(\"/api/addTip\", (ops: any) =&gt; {</span><br><span class=\"line\">    const obj = eval(\"(\" + ops.body + \")\")</span><br><span class=\"line\">    obj.data.id=tipList.length</span><br><span class=\"line\">    tipList.push(obj.data)</span><br><span class=\"line\">})</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 返回模拟的数据及接口：</span><br><span class=\"line\">module.exports = (router) =&gt; {</span><br><span class=\"line\">    return [</span><br><span class=\"line\">        router.get('/api/article', article),</span><br><span class=\"line\">        router.get('/home/selectArticle', selectA),</span><br><span class=\"line\">        router.get('/api/getDetail', details),</span><br><span class=\"line\">        router.post('/api/updateTip', fex),</span><br><span class=\"line\">        router.delete('/api/deleteTip', del),</span><br><span class=\"line\">        router.put('/api/addTip', add),</span><br><span class=\"line\">    ]</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"3-写接口文件\"><a href=\"#3-写接口文件\" class=\"headerlink\" title=\"3.写接口文件\"></a>3.写接口文件</h3><p>在src 文件夹下新建 <code>api文件夹</code> ，在文件夹下新建<code>home.ts 文件</code></p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import axios from 'axios'</span><br><span class=\"line\"></span><br><span class=\"line\">export function getArticles() {</span><br><span class=\"line\">    return axios.get('/home/article')  // mockjs返回的接口</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">// 搜索便签</span><br><span class=\"line\">export function selectA(val) {</span><br><span class=\"line\">    return axios.get('/home/selectArticle', { data: val })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">// 详情</span><br><span class=\"line\">export function getDetail(id) {</span><br><span class=\"line\">    return axios.get('/getDetail', { data: id })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">// 修改便签</span><br><span class=\"line\">export function fex(data) {</span><br><span class=\"line\">    return axios.post('/api/updateTip', { data: data })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除便签</span><br><span class=\"line\">export function del(id) {</span><br><span class=\"line\">    return axios.delete('/api/deleteTip', { data: id })</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">// 新增便签</span><br><span class=\"line\">export function add(data) {</span><br><span class=\"line\">    return axios.put('/api/addTip', { data: data })</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"4-在页面中引入\"><a href=\"#4-在页面中引入\" class=\"headerlink\" title=\"4.在页面中引入\"></a>4.在页面中引入</h3><figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import { getDetail } from \"../../api/home\";</span><br><span class=\"line\">...</span><br><span class=\"line\">setup(){</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\tgetDetail(data).then((e) =&gt; {</span><br><span class=\"line\">        if (e != null) {</span><br><span class=\"line\">          datas.title = e.data.title;</span><br><span class=\"line\">          datas.content = e.data.content;</span><br><span class=\"line\">        } else {</span><br><span class=\"line\">          datas.title = \"\";</span><br><span class=\"line\">          datas.content = \"\";</span><br><span class=\"line\">        }</span><br><span class=\"line\">      });</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h3><p><img src=\"https://img-blog.csdnimg.cn/35db179f75fa46e1a042fa8923ff8fbb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2VyZW5kaXBpdHlN,size_20,color_FFFFFF,t_70,g_se,x_16\"></p>\n",
            "tags": [
                "vue.js",
                "前端",
                "开发语言"
            ]
        },
        {
            "id": "http://example.com/2022/09/19/javascript-zhong-de-nei-cun-yi-chu-he-nei-cun-xie-lu/",
            "url": "http://example.com/2022/09/19/javascript-zhong-de-nei-cun-yi-chu-he-nei-cun-xie-lu/",
            "title": "JavaScript中的内存溢出和内存泄露",
            "date_published": "2022-09-19T12:58:07.000Z",
            "content_html": "<h2 id=\"内存溢出\"><a href=\"#内存溢出\" class=\"headerlink\" title=\"内存溢出\"></a>内存溢出</h2><ul>\n<li>概念：一种程序运行出现的错误，当程序运行需要的内存超过了剩余的内存时，就出抛出内存溢出的错误。</li>\n<li>举例：<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj = {}</span><br><span class=\"line\">for (var i = 0; i &lt; 10000; i++) {</span><br><span class=\"line\">\tobj[i] = new Array(1000000000)</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<img src=\"https://img-blog.csdnimg.cn/2a7712a5634d4d2e9a9380eef6f28115.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2VyZW5kaXBpdHlN,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center\"></li>\n</ul>\n<h2 id=\"内存泄露\"><a href=\"#内存泄露\" class=\"headerlink\" title=\"内存泄露\"></a>内存泄露</h2><p>概念：占用的内存没有及时释放，内存泄露积累多了就容易导致内存溢出。</p>\n<ul>\n<li>常见的内存泄露:<br>（1）意外的全局变量<br>（2）没有及时清理的计时器或回调函数*闭包</li>\n<li>举例：<br>（1）意外的全局变量<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function fn() {</span><br><span class=\"line\">\ta= 3</span><br><span class=\"line\">\tconsole.log(a)</span><br><span class=\"line\">}</span><br><span class=\"line\">fn()</span><br><span class=\"line\">// fn() = null</span><br></pre></td></tr></tbody></table></figure>\n（2）启动循环定时器后不清理<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var intervalId = setInterval(function () {</span><br><span class=\"line\">\tconsole.log( '----')</span><br><span class=\"line\">}, 1000)</span><br><span class=\"line\">// cLearInterval(intervaLId)</span><br></pre></td></tr></tbody></table></figure>\n（3）闭包，不及时释放<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function fn1() {</span><br><span class=\"line\">\tvar a = 4</span><br><span class=\"line\">\tfunction fn2() {</span><br><span class=\"line\">\t\tconsole.log(++a)</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\treturn fn2</span><br><span class=\"line\">}</span><br><span class=\"line\">var f = fn1()</span><br><span class=\"line\">f()</span><br><span class=\"line\">// f = nulL</span><br></pre></td></tr></tbody></table></figure></li>\n</ul>\n",
            "tags": [
                "javascript",
                "前端",
                "开发语言"
            ]
        }
    ]
}