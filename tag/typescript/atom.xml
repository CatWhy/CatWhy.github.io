<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>独白 • Posts by &#34;typescript&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-09-19T12:59:02.000Z</updated>
    <category term="javascript" />
    <category term="前端" />
    <category term="开发语言" />
    <category term="elementui" />
    <category term="vue.js" />
    <category term="原型模式" />
    <category term="react.js" />
    <category term="typescript" />
    <category term="Vue" />
    <category term="git" />
    <category term="npm" />
    <category term="node.js" />
    <category term="动画" />
    <category term="css3" />
    <entry>
        <id>http://example.com/2022/09/19/typescript-xue-xi-ri-ji/</id>
        <title>TypeScript学习日记</title>
        <link rel="alternate" href="http://example.com/2022/09/19/typescript-xue-xi-ri-ji/"/>
        <content type="html">&lt;p&gt;@[TOC]&lt;/p&gt;
&lt;h1 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.tslang.cn/docs/handbook/generics.html&#34;&gt;TypeScript&lt;/a&gt; 是微软开发的 JavaScript 的超集，TypeScript兼容JavaScript，可以载入JavaScript代码然后运行。TypeScript与JavaScript相比进步的地方 包括：加入注释，让编译器理解所支持的对象和函数，编译器会移除注释，不会增加开销；增加一个完整的类结构，使之更新是传统的面向对象语言&lt;/p&gt;
&lt;h1 id=&#34;为什么会有TypeScript？&#34;&gt;&lt;a href=&#34;#为什么会有TypeScript？&#34; class=&#34;headerlink&#34; title=&#34;为什么会有TypeScript？&#34;&gt;&lt;/a&gt;为什么会有TypeScript？&lt;/h1&gt;&lt;p&gt;JavaScript 只是一个脚本语言，并非设计用于开发大型 Web 应用，JavaScript 没有提供类和模块的概念，而 TypeScript 扩展了 JavaScript 实现了这些特性。TypeScript 主要特点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TypeScript 是微软推出的开源语言，使用 Apache 授权协议&lt;/li&gt;
&lt;li&gt;TypeScript 是 JavaScript 的超集.&lt;/li&gt;
&lt;li&gt;TypeScript 增加了可选类型、类和模块&lt;/li&gt;
&lt;li&gt;TypeScript 可编译成可读的、标准的 JavaScript&lt;/li&gt;
&lt;li&gt;TypeScript 支持开发大规模 JavaScript 应用&lt;/li&gt;
&lt;li&gt;TypeScript 设计用于开发大型应用，并保证编译后的 JavaScript 代码兼容性&lt;/li&gt;
&lt;li&gt;TypeScript 扩展了 JavaScript 的语法，因此已有的 JavaScript 代码可直接与 TypeScript 一起运行无需更改&lt;/li&gt;
&lt;li&gt;TypeScript 文件扩展名是 ts，而 TypeScript 编译器会编译成 js 文件&lt;/li&gt;
&lt;li&gt;TypeScript 语法与 JScript .NET 相同&lt;/li&gt;
&lt;li&gt;TypeScript 易学易于理解&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;JavaScript-与-TypeScript-的区别&#34;&gt;&lt;a href=&#34;#JavaScript-与-TypeScript-的区别&#34; class=&#34;headerlink&#34; title=&#34;JavaScript 与 TypeScript 的区别&#34;&gt;&lt;/a&gt;JavaScript 与 TypeScript 的区别&lt;/h1&gt;&lt;p&gt;TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，因此现有的 JavaScript 代码可与 TypeScript 一起工作无需任何修改，TypeScript 通过类型注解提供编译时的静态类型检查。TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译。&lt;/p&gt;
&lt;h1 id=&#34;TypeScript优势&#34;&gt;&lt;a href=&#34;#TypeScript优势&#34; class=&#34;headerlink&#34; title=&#34;TypeScript优势&#34;&gt;&lt;/a&gt;TypeScript优势&lt;/h1&gt;&lt;p&gt;解决痛点&lt;br&gt;TypeScript的设计解决了JavaScript的“痛点”：弱类型和没有命名空间；这导致程序很难模块化，不适合开发大型程序。&lt;/p&gt;
&lt;p&gt;语法提示&lt;br&gt;编写程序时，编辑器将提供精准的语法提示，以帮助大家更方便地实践面向对象的编程。&lt;/p&gt;
&lt;p&gt;容易上手&lt;br&gt;TypeScript的一个设计亮点，是它并没有抛弃JavaScript的语法另起炉灶，而是做成了JavaScript的超集，任何合法的JavaScript的语句在TypeScript下都是合法的，且沿用了JavaScript的使用习惯和惯例，可以说学习成本很低。&lt;/p&gt;
&lt;h1 id=&#34;一、TypeScript安装、编译&#34;&gt;&lt;a href=&#34;#一、TypeScript安装、编译&#34; class=&#34;headerlink&#34; title=&#34;一、TypeScript安装、编译&#34;&gt;&lt;/a&gt;一、TypeScript安装、编译&lt;/h1&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install -g typescript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cnpm install -g typescript &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yarm global add typescript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看版本：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tsc -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tsc helloworld.ts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：如果电脑上没有安装过yarn,请记得先安装&lt;/p&gt;
&lt;h1 id=&#34;二、配置TS开发工具-Vscode自动编译-ts文件&#34;&gt;&lt;a href=&#34;#二、配置TS开发工具-Vscode自动编译-ts文件&#34; class=&#34;headerlink&#34; title=&#34;二、配置TS开发工具 Vscode自动编译 .ts文件&#34;&gt;&lt;/a&gt;二、配置TS开发工具 Vscode自动编译 .ts文件&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在目录所在位置打开终端cmd&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tsc --init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
生成配置文件&lt;/li&gt;
&lt;li&gt; 然后取消生成的 &lt;code&gt;tsconfig.json&lt;/code&gt; 中的  “outDir”，改为如下：&lt;br&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/7dc0af0fd25c44eca7a2fac0da69a343.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2VyZW5kaXBpdHlN,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;点击终端，选择typescript.选择监视选项&lt;br&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/f818b0fee1794e97925f02dbaf391948.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAU2VyZW5kaXBpdHlN,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/li&gt;
&lt;li&gt;可以开始正常敲代码&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;三、TypeScript数据类型及理解&#34;&gt;&lt;a href=&#34;#三、TypeScript数据类型及理解&#34; class=&#34;headerlink&#34; title=&#34;三、TypeScript数据类型及理解&#34;&gt;&lt;/a&gt;三、TypeScript数据类型及理解&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;布尔类型（boolean）&lt;/li&gt;
&lt;li&gt;数字类型（number）&lt;/li&gt;
&lt;li&gt;字符串类型（string）&lt;/li&gt;
&lt;li&gt;数组类型（array）&lt;/li&gt;
&lt;li&gt;元组类型（tuple）&lt;/li&gt;
&lt;li&gt;枚举类型（enum）&lt;/li&gt;
&lt;li&gt;任意类型（any）&lt;/li&gt;
&lt;li&gt;null 和 undefined（是never 数据类型的子类型）&lt;/li&gt;
&lt;li&gt;void 类型&lt;/li&gt;
&lt;li&gt;never 类型：&lt;br&gt;a. 表示的是那些永不存在的值的类型，never类型是任何类型的子类型，也可以赋值给任何类型；然而，没有类型是never的子类型或可以赋值给never 类型（除了never本身之外）。 即使 any也不可以赋值给never。&lt;br&gt;b. 是其他类型（包括 null 和 undefined）的子类型，代表从不会出现的值。&lt;br&gt;c. 返回never的函数必须存在无法达到的终点 &lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;四、函数&#34;&gt;&lt;a href=&#34;#四、函数&#34; class=&#34;headerlink&#34; title=&#34;四、函数&#34;&gt;&lt;/a&gt;四、函数&lt;/h1&gt;&lt;h2 id=&#34;函数声明法&#34;&gt;&lt;a href=&#34;#函数声明法&#34; class=&#34;headerlink&#34; title=&#34;函数声明法&#34;&gt;&lt;/a&gt;函数声明法&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function run():string{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return &#39;run&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;匿名函数法&#34;&gt;&lt;a href=&#34;#匿名函数法&#34; class=&#34;headerlink&#34; title=&#34;匿名函数法&#34;&gt;&lt;/a&gt;匿名函数法&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let fun2=function():number{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(fun2());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let getInfo1=function (name:string,age:number):string {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return `${name}--${age}`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getInfo1(&#39;zhangdan&#39;,3434))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;没有返回值&#34;&gt;&lt;a href=&#34;#没有返回值&#34; class=&#34;headerlink&#34; title=&#34;没有返回值&#34;&gt;&lt;/a&gt;没有返回值&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function getInfo3(name:string,age:number):void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(`${name}--${age}`) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getInfo3(&#39;lixiaolong&#39;,3434)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;方法传参—可选参数&#34;&gt;&lt;a href=&#34;#方法传参—可选参数&#34; class=&#34;headerlink&#34; title=&#34;方法传参—可选参数&#34;&gt;&lt;/a&gt;方法传参—可选参数&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;注意：可选参数必须放在必须参数的后面&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// es5中的实参和形参可以不一样，但是ts中必须一样，否则就需要配置可选参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getInfo4(name?:string,age?:number):string {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return `${name}--${age}`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getInfo4(&#39;3453&#39;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getInfo4(&#39;&#39;,34))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;方法传参—设置默认参数&#34;&gt;&lt;a href=&#34;#方法传参—设置默认参数&#34; class=&#34;headerlink&#34; title=&#34;方法传参—设置默认参数&#34;&gt;&lt;/a&gt;方法传参—设置默认参数&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;用户可以不传递这个参数或传递的值是undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意：与普通可选参数不同的是，带默认值的参数不需要放在必须参数的后面。 如果带默认值的参数出现在必须参数前面，用户必须明确的传入 undefined值来获得默认值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getInfo5(name?:string,age:number=20):string {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return `${name}--${age}`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getInfo5(&#39;3453453&#39;,))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;剩余传参—即-es6-中的-…-语法&#34;&gt;&lt;a href=&#34;#剩余传参—即-es6-中的-…-语法&#34; class=&#34;headerlink&#34; title=&#34;剩余传参—即 es6 中的 … 语法&#34;&gt;&lt;/a&gt;剩余传参—即 es6 中的 … 语法&lt;/h2&gt;&lt;h2 id=&#34;函数重载&#34;&gt;&lt;a href=&#34;#函数重载&#34; class=&#34;headerlink&#34; title=&#34;函数重载&#34;&gt;&lt;/a&gt;函数重载&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// Java中的重载是指两个或两个以上同名函数，但是他们的参数不一样，这时会出现函数重载的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// ts为了兼容es5 es6,重载方法和Java有区别&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 在es5中，如果出现同名函数，则下面的会替换上面的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// function name(params:any):any {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// function name(params:any,config:any) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// ts中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getInfo6(names:string):string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getInfo6(age:number):string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getInfo6(str:any):any{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if (typeof str===&#39;string&#39;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return names&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }else{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return str&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getInfo6(20))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;箭头函数—和-es6-一样&#34;&gt;&lt;a href=&#34;#箭头函数—和-es6-一样&#34; class=&#34;headerlink&#34; title=&#34;箭头函数—和 es6 一样&#34;&gt;&lt;/a&gt;箭头函数—和 es6 一样&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setTimeout(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alert(3333)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}, 1000);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;五、类&#34;&gt;&lt;a href=&#34;#五、类&#34; class=&#34;headerlink&#34; title=&#34;五、类&#34;&gt;&lt;/a&gt;五、类&lt;/h1&gt;&lt;h2 id=&#34;基本语法&#34;&gt;&lt;a href=&#34;#基本语法&#34; class=&#34;headerlink&#34; title=&#34;基本语法&#34;&gt;&lt;/a&gt;基本语法&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 通过class创建类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name: string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(name: string) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello():void{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello animal:&#34;+this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 实例化类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var tom = new Animal(&#34;tom&#34;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tom.sayHello();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;类的继承&#34;&gt;&lt;a href=&#34;#类的继承&#34; class=&#34;headerlink&#34; title=&#34;类的继承&#34;&gt;&lt;/a&gt;类的继承&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 通过class创建类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name: string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(name: string) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 类的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello animal:&#34; + this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 继承Animal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Cat extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 重写方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello cat:&#34; + this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Dog extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello dog:&#34; + this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;修饰符&#34;&gt;&lt;a href=&#34;#修饰符&#34; class=&#34;headerlink&#34; title=&#34;修饰符&#34;&gt;&lt;/a&gt;修饰符&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private name: string; // 这里把name修饰符改为private&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(name: string) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello animal:&#34; + this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Cat extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello cat:&#34; + this.name); //这里会报错，因为无法引用父类private修饰的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Dog extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello dog:&#34; + this.name); //这里会报错，因为无法引用父类private修饰的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;Get-Set访问器&#34;&gt;&lt;a href=&#34;#Get-Set访问器&#34; class=&#34;headerlink&#34; title=&#34;Get/Set访问器&#34;&gt;&lt;/a&gt;Get/Set访问器&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private name: string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    get name(): string { //通过get和set解决子类不能引用父类private修饰的属性的问题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return this.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    set name(name: string) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(name: string) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello animal:&#34; + this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Cat extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello cat:&#34; + this.name); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Dog extends Animal {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sayHello(): void {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alert(&#34;hello dog:&#34; + this.name); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;静态属性&#34;&gt;&lt;a href=&#34;#静态属性&#34; class=&#34;headerlink&#34; title=&#34;静态属性&#34;&gt;&lt;/a&gt;静态属性&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Table {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static width: Number = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    static height: Number = 50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var width: Number = Table.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;六、接口&#34;&gt;&lt;a href=&#34;#六、接口&#34; class=&#34;headerlink&#34; title=&#34;六、接口&#34;&gt;&lt;/a&gt;六、接口&lt;/h1&gt;&lt;h2 id=&#34;基本语法-1&#34;&gt;&lt;a href=&#34;#基本语法-1&#34; class=&#34;headerlink&#34; title=&#34;基本语法&#34;&gt;&lt;/a&gt;基本语法&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;interface Graphic {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    height: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;class Square implements Graphic {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    height: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor() {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.width = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.height = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    constructor(width: Number, height: Number) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.height = height;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.width = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;继承接口&#34;&gt;&lt;a href=&#34;#继承接口&#34; class=&#34;headerlink&#34; title=&#34;继承接口&#34;&gt;&lt;/a&gt;继承接口&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;interface Graphic {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    height: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface PenStroke {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    penWidth: Number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface Square extends Graphic, PenStroke {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sideLength: number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;七、泛型&#34;&gt;&lt;a href=&#34;#七、泛型&#34; class=&#34;headerlink&#34; title=&#34;七、泛型&#34;&gt;&lt;/a&gt;七、泛型&lt;/h1&gt;&lt;h2 id=&#34;介绍&#34;&gt;&lt;a href=&#34;#介绍&#34; class=&#34;headerlink&#34; title=&#34;介绍&#34;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;软件工程中，我们不仅要创建一致的定义良好的API，同时也要考虑可重用性。 组件不仅能够支持当前的数据类型，同时也能支持未来的数据类型，这在创建大型系统时为你提供了十分灵活的功能。&lt;br&gt;在像C#和Java这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。&lt;br&gt;通俗理解：泛型就是解决类、接口、方法的复用性以及对不特定数据类型的支持&lt;/p&gt;
&lt;h2 id=&#34;泛型函数&#34;&gt;&lt;a href=&#34;#泛型函数&#34; class=&#34;headerlink&#34; title=&#34;泛型函数&#34;&gt;&lt;/a&gt;泛型函数&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function getDate&amp;lt;T&amp;gt;(value: T): T {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(&#39;3453453453&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getDate&amp;lt;number&amp;gt;(345345);   // 3453453453&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getDate&amp;lt;string&amp;gt;(&#39;String&#39;)  // 3453453453&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getDate1&amp;lt;T&amp;gt;(value: T): any {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(value);  // 345345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return value + &#39;345345345&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(getDate1&amp;lt;number&amp;gt;(345345));   // 345345345345345&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;泛型类&#34;&gt;&lt;a href=&#34;#泛型类&#34; class=&#34;headerlink&#34; title=&#34;泛型类&#34;&gt;&lt;/a&gt;泛型类&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Minclass&amp;lt;T&amp;gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public list: T[] = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add(value: T) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        this.list.push(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    min(): T {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        let minest = this.list[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (let i = 0; i &amp;lt; this.list.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (minest &amp;gt; this.list[i]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                minest = this.list[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return minest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let ert = new Minclass&amp;lt;number&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(34)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(89)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(56)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(67)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(23)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(16)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ert.add(79)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(ert.min())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let strs = new Minclass&amp;lt;string&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strs.add(&#39;bc&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strs.add(&#39;dfgd&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strs.add(&#39;erf&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strs.add(&#39;zdf&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strs.add(&#39;abcd&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alert(strs.min())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;泛型接口&#34;&gt;&lt;a href=&#34;#泛型接口&#34; class=&#34;headerlink&#34; title=&#34;泛型接口&#34;&gt;&lt;/a&gt;泛型接口&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 写法一&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface configFn {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;T&amp;gt;(confg: T): T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let getData: configFn = function &amp;lt;T&amp;gt;(value: T): T {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getData&amp;lt;number&amp;gt;(34)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 写法二&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface config4&amp;lt;T&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (config: T): T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function getData2&amp;lt;T&amp;gt;(value: T): T {&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let test: config4&amp;lt;string&amp;gt; = getData2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test(&#39;sdfsdf&#39;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="前端" />
        <category term="typescript" />
        <updated>2022-09-19T12:59:02.000Z</updated>
    </entry>
</feed>
