{
    "version": "https://jsonfeed.org/version/1",
    "title": "独白 • All posts by \"vue\" tag",
    "description": "博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/09/19/vue-shi-xian-word-wen-dang-zai-xian-yu-lan-gong-neng-nei-wang-wai-wang/",
            "url": "http://example.com/2022/09/19/vue-shi-xian-word-wen-dang-zai-xian-yu-lan-gong-neng-nei-wang-wai-wang/",
            "title": "Vue实现Word文档在线预览功能（内网、外网）！！！",
            "date_published": "2022-09-19T13:02:45.000Z",
            "content_html": "<h2 id=\"内网实现方法：\"><a href=\"#内网实现方法：\" class=\"headerlink\" title=\"内网实现方法：\"></a><strong>内网实现方法：</strong></h2><p>需要下载两个插件，一定要注意！！</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i docx-preview@0.1.4</span><br><span class=\"line\"></span><br><span class=\"line\">npm i jszip</span><br></pre></td></tr></tbody></table></figure>\n\n<p>正文中引入</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ref=\"preview\"  id=\"preview\" &gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\tlet docx = require(\"docx-preview\");</span><br><span class=\"line\">\twindow.JSZip = require(\"jszip\");</span><br><span class=\"line\">\t</span><br><span class=\"line\">    // 查看文档按钮</span><br><span class=\"line\">    handleFile(row) {</span><br><span class=\"line\">\t\tthis.getDocx() .then((response) =&gt; {</span><br><span class=\"line\">\t\t\tconsole.log(response);  // response为流文件</span><br><span class=\"line\">\t\t\tdocx.renderAsync(response.data, this.$refs.preview);</span><br><span class=\"line\">\t\t\t// 渲染到页面（着重注意 this.$refs.preview要和&lt;div ref=\"preview\"&gt;&lt;/div&gt;保持一致）</span><br><span class=\"line\">\t\t})</span><br><span class=\"line\">\t\t.catch(function (error) {});</span><br><span class=\"line\">\t}</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"外网实现方法：\"><a href=\"#外网实现方法：\" class=\"headerlink\" title=\"外网实现方法：\"></a><strong>外网实现方法：</strong></h2><p>可以用下面这种方式：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;iframe</span><br><span class=\"line\">\t:src=\"`https://view.officeapps.live.com/op/view.aspx?src=${downloadUrl}`\"</span><br><span class=\"line\">\twidth=\"100%\"</span><br><span class=\"line\">\t:height=\"height\"</span><br><span class=\"line\">\tframeborder=\"1\"</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></tbody></table></figure>\n<p>有时候使用这种方式会遇到下面提示：<br><img src=\"https://img-blog.csdnimg.cn/6a435d1088624d77b590b4b5e4d9e2a4.png#pic_center\"></p>\n<p>不要因此就直接放弃这种方式，好好找找原因。我这边遇到该情况的原因是因为本地DNS不解析该链接，后将DNS改为</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dns: 101.198.198.198</span><br><span class=\"line\">     114.114.114.114</span><br></pre></td></tr></tbody></table></figure>\n<p>完美的解决了该问题。<br>好了，可以轻松实现文档预览啦</p>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "http://example.com/2022/09/19/vue-zhong-shi-yong-el-data-picker-bao-cuo-avoid-mutating-a-prop-directly-since-the-value-will-be-overwrite/",
            "url": "http://example.com/2022/09/19/vue-zhong-shi-yong-el-data-picker-bao-cuo-avoid-mutating-a-prop-directly-since-the-value-will-be-overwrite/",
            "title": "Vue中使用el-data-picker报错 Avoid mutating a prop directly since the value will be overwrite",
            "date_published": "2022-09-19T13:02:04.000Z",
            "content_html": "<p><img src=\"https://img-blog.csdnimg.cn/0d3194fbdcfb40b9979505b291540af0.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>锁定组件，发现是 el-date-picker 组件抛出的警告。通过在 github 上搜索，最终找到了答案<br>问题出在了这个 PR #21806 增加了 props placement 用来适应位置，但是之前的代码 created 时有给 placement 赋值。<br>this.placement = PLACEMENT_MAP[this.align] || PLACEMENT_MAP.left;<br>说白了之前 placement 是 data 的对象，现在变成 props 了，然后修改就报错了</p>\n</blockquote>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><blockquote>\n<p>想要解决这个问题，可以修改版本到 2.15.8</p>\n<blockquote>\n<p>npm uninstall element-ui<br>npm install <a href=\"mailto:element-ui@2.15.8\">element-ui@2.15.8</a> -s<br><img src=\"https://img-blog.csdnimg.cn/aab330da73bb4df2bd068434372343c1.png\" alt=\"在这里插入图片描述\"><br><strong>注意：这里不要【‘^’】,否则还会报错</strong></p>\n</blockquote>\n</blockquote>\n",
            "tags": [
                "Vue"
            ]
        },
        {
            "id": "http://example.com/2022/09/19/vue-xiang-mu-zhong-shi-yong-dai-ti-src-bing-zai-vscode-zhong-kai-qi-lu-jing-zi-dong-ti-shi/",
            "url": "http://example.com/2022/09/19/vue-xiang-mu-zhong-shi-yong-dai-ti-src-bing-zai-vscode-zhong-kai-qi-lu-jing-zi-dong-ti-shi/",
            "title": "Vue项目中使用@代替src——并在VScode中开启@路径自动提示",
            "date_published": "2022-09-19T13:01:51.000Z",
            "content_html": "<p><code>配置引用路径（以“@”引用为项目的src目录为例）可拆分为如下两步操作</code><br> <code> - 配置webpack打包时将“@”解析为项目的src目录</code><br> <code> - 配置vsCode在路径中输入“@”时的路径提示</code></p>\n<p><code>一般的 “路径别名” ：</code><br><code>+ @ ——src</code><br><code>+ components —— src/components</code></p>\n<p>一共分为3步。</p>\n<h3 id=\"第一步：安装path模块\"><a href=\"#第一步：安装path模块\" class=\"headerlink\" title=\"第一步：安装path模块\"></a>第一步：安装path模块</h3><p>可以先看看自己的<code>node_modules</code>文件里面能不能找到path模块。<br>如果没有，那就安装，终端运行：<br><code>npm install path --save</code></p>\n<h3 id=\"第二步：设置路径别名\"><a href=\"#第二步：设置路径别名\" class=\"headerlink\" title=\"第二步：设置路径别名\"></a>第二步：设置路径别名</h3><p>我的项目使用的是 vue-cli 脚手架 搭建的。<br>首先在和 <code>src</code>并齐的<code>vue.config.js</code>[没有就新建]中，使用<code>path</code>模块，设置一些路径的别名。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const path = require(\"path\");</span><br><span class=\"line\">function resolve(dir) {</span><br><span class=\"line\">  return path.join(__dirname, dir);</span><br><span class=\"line\">} </span><br><span class=\"line\">module.exports = {</span><br><span class=\"line\">  chainWebpack: config =&gt; {</span><br><span class=\"line\">    config.resolve.alias</span><br><span class=\"line\">      .set(\"@\", resolve(\"src\"))</span><br><span class=\"line\">      .set(\"assets\", resolve(\"src/assets\"))</span><br><span class=\"line\">      .set(\"components\", resolve(\"src/components\"))</span><br><span class=\"line\">      .set(\"base\", resolve(\"baseConfig\"))</span><br><span class=\"line\">      .set(\"public\", resolve(\"public\"));</span><br><span class=\"line\">  },</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"第三步：VScode-设置路径自动补全\"><a href=\"#第三步：VScode-设置路径自动补全\" class=\"headerlink\" title=\"第三步：VScode 设置路径自动补全\"></a>第三步：<a href=\"https://so.csdn.net/so/search?q=VScode&amp;spm=1001.2101.3001.7020\">VScode</a> 设置路径自动补全</h3><p>在我们进行上述两个步骤之后，我们的@/…是可以正常使用了，但是！我们在编辑器输入@/以后，编辑器不会自动给我们提示。</p>\n<p>那这样的话，我们还不如像以前那样的用./ ../这样式的路径，所以，这个时候，配置编辑器自动提示就十分必要了！</p>\n<p>接下来，我们可以进行下面的操作：</p>\n<ol>\n<li>打开VScode的设置</li>\n<li>点击下面的按钮，打开<code>setting.json</code><br><img src=\"%5B90bf54e322794829842bd7af7e18ee29.png%5D(https://img-blog.csdnimg.cn/90bf54e322794829842bd7af7e18ee29.png)\"></li>\n<li>第二步也可以通过使用快捷键 <code>ctrl + shift + p</code>召唤搜索框，·搜索<code>setting.json</code></li>\n<li>添加如下代码：<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">   \"path-intellisense.mappings\": {</span><br><span class=\"line\">   \t\t\"@\": \"${workspaceRoot}/src\"</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure></li>\n</ol>\n<blockquote>\n<p>以上的所有配置好了，代码确定没有错误之后，我们就可以正常使用@/…的方式来写路径了。不要忘记重启VScode哦！！！！</p>\n</blockquote>\n",
            "tags": [
                "Vue"
            ]
        }
    ]
}